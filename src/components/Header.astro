---
import { getLangFromUrl, useTranslation, translatePath } from "@/i18n/utils";
import LanguageSelector from "./LanguageSelector.astro";

const t = useTranslation(getLangFromUrl(Astro.url));

const lang = getLangFromUrl(Astro.url);

const navItems = [
  {
    title: "Proyectos",
    label: "proyectos",
    href: "/#proyectos",
  },

  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    href: "/#sobre-mi",
  },
  {
    title: "Contacto",
    label: "contacto",
    href: "/#contacto",
  },
];
---

<header class="flex mx-auto justify-center items-center sticky top-0 w-full z-10 pt-2">
  <nav
    class="border border-[rgba(255,255,255,.08)] bg-black/30 rounded-md px-3 py-1 md:px-6 backdrop-blur-lg"
  >
    <ul class="space-x-2">
      {
        navItems.map(({ href, label }) => {
          const navTranslation = t("nav");
          const translatedLabel = navTranslation[label];
          return (
            <a
              href={translatePath(href, lang)}
              aria-label={translatedLabel}
              class={`rounded-lg px-2 opacity-80 hover:opacity-100 transition`}
            >
              {translatedLabel}
            </a>
          );
        })
      }
    </ul>
  </nav>

  <LanguageSelector />
</header>

<script>
  window.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("nav ul a");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          console.log(entry);
        }
      });
    };
    const options = {};
    const observer = new IntersectionObserver(callback, options);
  });
</script>
